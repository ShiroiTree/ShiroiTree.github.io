{
    "version": "https://jsonfeed.org/version/1",
    "title": "Personal Blog",
    "description": "",
    "home_page_url": "http://shiroitree.icu",
    "items": [
        {
            "id": "http://shiroitree.icu/cs-learning/luogu/luogu-beginner-simulate/",
            "url": "http://shiroitree.icu/cs-learning/luogu/luogu-beginner-simulate/",
            "title": "洛谷-入门-模拟",
            "date_published": "2023-10-14T16:00:00.000Z",
            "content_html": "<h1 id=\"可以使用模拟解决的算法题\"><a class=\"anchor\" href=\"#可以使用模拟解决的算法题\">#</a> 可以使用模拟解决的算法题</h1>\n<p>模拟，顾名思义，我们可以直接按照其题目描述的数值处理流程对所给数值处理后，输出答案。该方案在逻辑上极为直观的，在对数值进行处理的时候不需要推导状态转移方程，但是对于部分题目其时间复杂度过高，所以需要斟酌使用。</p>\n<h2 id=\"p5594-xr-4模拟赛\"><a class=\"anchor\" href=\"#p5594-xr-4模拟赛\">#</a> P5594 【XR-4】模拟赛</h2>\n<p>该题使用模拟可以简单解决。</p>\n<p>对输入数据建立二维数组 map [n] [k+1] 用于存放，第 i 位同学，在第 j 天所做的题号。<br />\n犹豫我们只需要统计每天答不同题号的种类数，所以我们可仅对 j 天进行遍历。<br />\n统计种类数时，判断是否出现过可使用一个一维数组 bool [m+1] 下表是题号，内容是布尔值。最后将统计值输出就行。</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"><span>P5594  </span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d %d %d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>n<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>m<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">int</span> map<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>k <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;=</span> k<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            map<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;=</span> m<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token keyword\">int</span> a<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            map<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> j<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> k<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token keyword\">int</span> boo<span class=\"token punctuation\">[</span>m<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>ans<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        boo<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>   </pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>j<span class=\"token operator\">&lt;=</span>m<span class=\"token punctuation\">;</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            boo<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>j<span class=\"token operator\">&lt;</span>n<span class=\"token punctuation\">;</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>boo<span class=\"token punctuation\">[</span>map<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                ans<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                boo<span class=\"token punctuation\">[</span>map<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d \"</span><span class=\"token punctuation\">,</span> ans<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "CS学习",
                "洛谷"
            ]
        },
        {
            "id": "http://shiroitree.icu/about/about-site/",
            "url": "http://shiroitree.icu/about/about-site/",
            "title": "关于本站",
            "date_published": "2023-10-13T16:00:00.000Z",
            "content_html": "<p>本站是 @ShiroiTree 的个人博客。</p>\n<p>ver：0.0.2</p>\n<h3 id=\"关于个人站的搭建\"><a class=\"anchor\" href=\"#关于个人站的搭建\">#</a> 关于个人站的搭建</h3>\n<p>目前来说，本站使用的是最流行的静态站配置模式，基于 Hexo+Github 托管的模式，并用域名提供商的 DNS 服务器进行解析。</p>\n<p>Hexo 的配置目前网络资源已经非常丰富，此处不再介绍，只单独讨论一下想要建站的新人需要注意的坑</p>\n<ol>\n<li>注意文件存储目录，为避免出现不必要的问题，文件目录中不应出现汉字、特殊符号（# @ ！等）。</li>\n<li>个人域名不是必备的，购买了个人域名之后，如果没有做好 DNS 服务器配置，访问速度和 Github 原始网站相仿（本站既是如此）。所以，如果不是钱多没处花，或者就是想要一个高逼格的域名，否则购买一个个人域名是没有必要的。</li>\n<li>配置这样一个站点，可以说完全不复杂，但是代价是很多内容的显示就没有办法按照自己的想法来。如果说，想要整个页面的高度定制化，那 HTLM 和 CSS 的学习是必不可少的（拥有这样的一个网站作为练手对象，确实有学习价值）。总之，配置这样的网站，需要学习的东西可多可少，主要是看自己对于效果的追求。</li>\n<li>最后一点，问问自己，配置这样的一个个人站，是为了达成什么目的。当然，你也可以是因为觉得拥有一个个人站很有逼格，或者是觉得国内常规博客平台没有办法满足自己的需要，也可以是你想要发布一些不那么合规的东西，这都是你搭建一个个人站的理由。只是，你应该努力达成自己最初设定的那个目标。</li>\n</ol>\n<p>实际上，Hexo 有很多不方便的地方，它作为一个静态博客的框架，从内容管理的角度看是非常不方便的，没有后台系统，每次更新博客只能在本地生成文件之后，再挂载到 Github 上；不能防 SQL, 所以基本上没有评论系统；目录系统糟糕，想要优秀的内容整理只有自己定制。</p>\n<p>目前使用的主题是 Shoka，未来网站将会在此基础上定制，并上线讨论区，供大家进行讨论。</p>\n<p>但是，不论如何，再多的缺点也挡不住其简单易用占用低的特点，对于我这种初次配置网站的小白，可以说是量身定制的了。</p>\n<h3 id=\"本站会发布哪些内容\"><a class=\"anchor\" href=\"#本站会发布哪些内容\">#</a> 本站会发布哪些内容</h3>\n<p>目前计划的，本站将作为我未来学习 + 成果输出的一部分，我会发布包括但不限于：刷算法题的感想，部分学科的学习总结，目前正在 Doing 的项目。</p>\n<p>同时，如上文所述，本站将作为我学习 HTML 和 CSS 的一个媒介（真的不想做前端，就学这一点点），我将会在本站上跟进关于本站如何深度定制，以及相应的代码与思路。<br />\n<s>（真的很讨厌写前端，这辈子都不可能写前端的，怎么可能是我自己定制的，都是抄来的罢了）</s></p>\n<h3 id=\"关于我自己\"><a class=\"anchor\" href=\"#关于我自己\">#</a> 关于我自己</h3>\n<p>是某西北三航技校 23 届在读，好人都可以来找我加联系方式，希望和大家交朋友～～，希望大佬们来带飞我～～。</p>\n<p>正在准备 ACM，学习算法中，所以未来一段时间，本站将会作为我挂载部分代码及刷题心得的地方。</p>\n",
            "tags": [
                "Hexo"
            ]
        }
    ]
}